{
  "openapi": "3.0.0",
  "info": {
    "title": "Gamify Platform REST API",
    "version": "0.1",
    "description": "Interface summary.\n\n GamifyPlatform Web Admin Console provides game registration for the game developers. During the registration process, an application ID and a service user is generated and binded to the game. The application ID is unique for each game and identifies the game in the Gamify Platform. The service user provides access to game related management function.\n\n The following REST endpoints are organized into two categories:\n\n A) Administration endpoints provides user and/or game item management (accessible by using service user)\n\n B) User related (in game) endpoints provides user interactions (accessible by the actualy logged in user/player).\n\n Successfull login is required, in order to interact with any of the following API call. At login, the game client should provide the authentication credentials by utilizing HTTP Basic authentication scheme. The login response contains the authorization token which is used later on.\n\n There are two user types in the system:\n\n A) service user, which is directly binded to a game\n\n B) end user, who plays the game. The end users are registered to the Gamify Platform globally and belongs to one or more games.\n\n After login, all subsequent endpoints are secured by Bearer authentication (also called token authentication). Therefore, each request must send the authorization token (received at login) in the 'Authorization' HTTP header as a 'Bearer' value.\n",
    "contact": {
      "email": "gamifyplatform02@gmail.com",
      "name": "Support Contact",
      "url": "http://35.187.184.40:8080/contact.html"
    },
    "license": {
      "url": "http://35.187.184.40:8080/license.html",
      "name": "Gamify Platform License"
    }
  },
  "tags": [
    {
      "name": "Game",
      "description": "Game related endpoints"
    },
    {
      "name": "Item",
      "description": "Game item related endpoints"
    },
    {
      "name": "User",
      "description": "User related endpoints"
    },
    {
      "name": "Wallet",
      "description": "Wallet related endpoints"
    },
    {
      "name": "Admin",
      "description": "Admin endpoints. Requires service user login/authorization token"
    }
  ],
  "servers": [
    {
      "url": "http://35.187.184.40:8090/gamify-store"
    }
  ],
  "paths": {
    "/user/login/{appCode}": {
      "get": {
        "summary": "Login user",
        "description": "Login user by basic auth method.",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "get-user-login",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "appCode",
            "in": "path",
            "required": true,
            "description": "Game Code"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "description": "HTTP header for Basic Authorization. Base64 encoded 'username:password' with 'Basic' prefix, for example: 'Authorization: Basic dGVzdGFkbWluOm19dDIzMUM='",
            "name": "Authorization"
          }
        ]
      }
    },
    "/user/login/refresh": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Refresh user token",
        "description": "Refresh user token",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "refresh_token",
        "parameters": []
      }
    },
    "/user/whoami": {
      "get": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Get user info by auth token",
        "description": "Get authenticated (already logged in) user data by authorization token.",
        "operationId": "get-user-whoami",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "parameters": [],
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Get User Info by User ID",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          },
          "404": {
            "description": "User Not Found"
          }
        },
        "operationId": "get-user-id",
        "description": "Retrieve the information of the user with the matching user ID.",
        "parameters": [],
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "User ID"
        }
      ],
      "patch": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Update User Information",
        "operationId": "patch-user-id",
        "responses": {
          "200": {
            "description": "Updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User Not Found"
          }
        },
        "description": "Update existing user data.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "User data to be updated."
        },
        "parameters": [],
        "tags": [
          "User"
        ]
      }
    },
    "/user": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Create New User",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "Created user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "User data to be created"
        },
        "description": "Create a new user.",
        "parameters": [],
        "tags": [
          "User",
          "Admin"
        ]
      }
    },
    "/user/wallet": {
      "get": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Get wallet information",
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "get-wallet",
        "description": "Get wallet information like: free balance, pledged game/item details etc. Note: this response contains information only for the specific user and game (identified by the token).",
        "parameters": []
      },
      "parameters": []
    },
    "/user/wallet/topup": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Topup money to wallet",
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "post-wallet-topup",
        "description": "Topup money from credit card to the wallet, which is added to the wallet's free balance (money deposit)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/MoneyItem"
              }
            }
          },
          "description": "Money to topup"
        }
      },
      "description": "pénz feltöltés",
      "parameters": []
    },
    "/user/wallet/redeem": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Redeem money from wallet",
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "post-wallet-redeem",
        "description": "Redeem money from the wallet free balance and transfer it to the credit card account (money withdrawal)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/MoneyItem"
              }
            }
          },
          "description": "Money to redeem"
        }
      },
      "parameters": []
    },
    "/user/wallet/reward": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Money transfer to wallet",
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "post-wallet-grant",
        "description": "Money transfer to the wallet by a game, which is added to the wallet's free balance (money reward)",
        "parameters": [],
        "requestBody": {
          "description": "Money to reward",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/MoneyItem"
              }
            }
          }
        }
      },
      "description": "Pénz jutalom / nyeremény, reward, kamat",
      "parameters": []
    },
    "/game/buy": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Buy a game or subscribtion",
        "tags": [
          "Game"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "get-game-buy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/GameBuy"
              }
            }
          },
          "description": ""
        },
        "description": "Buy a game or subscribtion. Wallet free account will be charged. Not reversable transaction, money will be spent. "
      }
    },
    "/game/pledge": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Buy or subscribe a game for a specific period of time",
        "tags": [
          "Game"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "get-game-pledge",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/GameBuy"
              }
            }
          },
          "description": ""
        },
        "description": "Buy or subscribe to a game for a specific period of time. Will be reserved from the wallet free account. Money will be freed again (and will be available) after the period is ended."
      },
      "parameters": []
    },
    "/game/release/{id}": {
      "get": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Release an earlier pledged game",
        "tags": [
          "Game"
        ],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "get-game-release",
        "parameters": [],
        "description": "Break or release an earlier pledged game, before the pledge period is ended. Game's pledged amount will be freed up and transfered to the wallet free balance."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Game ID"
        }
      ]
    },
    "/game/items": {
      "get": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Query game items",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Items"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "get-game-items",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isOwned",
            "description": "If false than query items which are available to buy or pledge. In case of true, the query provides the user's bought or pledget items."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "fromIndex",
            "description": "Pagination start index"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageLength",
            "description": "Pagination start index"
          }
        ],
        "description": "List of available or earlier buyed or pledged user's game items. See query params for filtering and pagination.",
        "tags": [
          "Item"
        ]
      },
      "parameters": []
    },
    "/game/item": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Create game item",
        "responses": {
          "200": {
            "description": "Created item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "post-game-item",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "description": "Item data to be created"
        },
        "description": "Create/upload available items for a game which can be buyed or pledged later.",
        "tags": [
          "Item",
          "Admin"
        ]
      },
      "put": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "summary": "Update game item",
        "responses": {
          "200": {
            "description": "Updated item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "operationId": "put-game-item",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "description": "Item data to be updated"
        },
        "description": "Update available items for a game which can be buyed or pledged later.",
        "tags": [
          "Item",
          "Admin"
        ]
      }
    },
    "/game/item/buy": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "description": "Buy an available item.",
        "summary": "Buy a game item",
        "operationId": "get-game-items-buy",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "tags": [
          "Item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/BuyItem"
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/game/item/pledge": {
      "post": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "description": "Buy or subscribe an available item for a certain period of time.",
        "summary": "Pledge a game item",
        "operationId": "get-game-items-pledge",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "tags": [
          "Item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/BuyItem"
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/game/item/release/{id}": {
      "get": {
        "security": [
          {
            "httpBearerAuthToken": []
          }
        ],
        "description": "Break or release an earlier pledged item, before the pledge period is ended. Items's pledged amount will be freed up and transfered to the wallet free balance.",
        "summary": "Release a pledged game item",
        "operationId": "get-game-items-release",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Actual wallet information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "400": {
            "description": "Missing or wrong HTTP Authorization header!"
          }
        },
        "tags": [
          "Item"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Game item ID"
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "httpBearerAuthToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "User per game authorization token which grant permission to  API endpoints."
      }
    },
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "emailVerified",
          "created"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the given user."
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date that the user was created.",
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time"
          },
          "authorities": {
            "type": "array",
            "description": "Auth roles like: admin, user etc.",
            "items": {
              "type": "object",
              "properties": {
                "authority": {
                  "type": "string"
                }
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "false if user login is blocked"
          },
          "lang": {
            "type": "string",
            "description": "language"
          }
        }
      },
      "Wallet": {
        "title": "Wallet",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "freeBalance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoneyItem"
            }
          },
          "pledgedGames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Game"
            }
          },
          "pledgedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "Game": {
        "title": "Game",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "developer": {
            "type": "string"
          },
          "metaData": {
            "type": "string"
          }
        }
      },
      "GameBuy": {
        "title": "GameBuy",
        "type": "object",
        "properties": {
          "gameId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "Item": {
        "title": "Item",
        "type": "object",
        "required": [
          "id",
          "applicationId",
          "name",
          "type",
          "amount",
          "currency",
          "consumable"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "applicationId": {
            "type": "string",
            "description": "Game foreign key"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Object, service, level etc."
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "consumable": {
            "type": "boolean"
          },
          "count": {
            "type": "number"
          },
          "metaData": {
            "type": "string",
            "description": "JSON"
          }
        }
      },
      "Items": {
        "title": "Items",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "BuyItem": {
        "title": "BuyItem",
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string"
          },
          "count": {
            "type": "number"
          }
        }
      },
      "MoneyItem": {
        "title": "MoneyItem",
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "title": "TokenResponse",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expiration": {
            "type": "number"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      }
    }
  }
}